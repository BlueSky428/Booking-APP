version: "3.4"

services:
  db:
    image: postgres
    restart: always
    volumes:
      - ./accessibility-service/InitializeDb.sql:/docker-entrypoint-initdb.d/init-accessibility.sql
      - ./booking-service/InitializeDb.sql:/docker-entrypoint-initdb.d/init-booking.sql
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: pg
    ports:
      - "5433:5432"

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  rabbit:
    image: rabbitmq:3-management
    restart: always
    ports:
      - 8081:15672

  accessibility:
    image: accessibility
    build:
      context: .
      dockerfile: accessibility-service/Dockerfile
    ports:
      - "80:80"
    environment:
      - ConnectionStrings:Accessibility=Host=db;Database=postgres;Username=postgres;Password=pg

  booking:
    image: booking
    build:
      context: .
      dockerfile: booking-service/Dockerfile
    ports:
      - "81:80"
    environment:
      - ConnectionStrings:Booking=Host=db;Database=postgres;Username=postgres;Password=pg
      - RabbitMQ:Hostname=rabbit

  management:
    build:
      context: ./management-service
    volumes:
      - ./management-service:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 82:80
    environment:
      SERVER_PORT: 80
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pg
      POSTGRES_DB: postgres
      MIGRATIONS_DIR: src/migrations
    depends_on:
      - db
    command: npm run start:dev

volumes:
  pgdata:
