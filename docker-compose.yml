version: "3.4"

services:
  db:
    image: postgres
    restart: always
    volumes:
      - ./management-service/db/management-db-initialize.sh:/docker-entrypoint-initdb.d/management-db-initialize.sh
      - ./db-initialize.sh:/docker-entrypoint-initdb.d/db-initialize.sh
      - pgdata:/var/lib/postgresql/data
    env_file:
      - ./.docker-envs/db.env
    ports:
      - "5433:5432"

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  gateway:
    image: gateway
    build:
      context: .
      dockerfile: gateway-service/Dockerfile
    ports:
      - "8085:80"
    env_file:
      - ./.docker-envs/gateway.env

  rabbit:
    image: rabbitmq:3-management
    restart: always
    volumes:
      - /var/lib/rabbitmq
    ports:
      - "15672:15672"
    expose:
      - "5672"
    env_file:
      - ./.docker-envs/rabbitmq.env

  accessibility:
    image: accessibility
    build:
      context: .
      dockerfile: accessibility-service/Dockerfile
    ports:
      - "80:80"
    env_file:
      - ./.docker-envs/accessibility.env
    depends_on:
      - db
      - rabbit

  management:
    image: mangement
    build:
      context: ./management-service
    volumes:
      - ./management-service:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 82:80
    env_file:
      - ./.docker-envs/management.env
    depends_on:
      - db
      - rabbit

  community:
    image: community
    build:
      context: .
      dockerfile: community-service/Dockerfile
    ports:
      - "84:80"
    env_file:
      - ./.docker-envs/community.env
    depends_on:
      - db
      - rabbit

volumes:
  pgdata:
