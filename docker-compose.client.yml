version: "3.4"

services:
  db:
    image: postgres
    restart: always
    volumes:
      - ./management-service/db/management-db-initialize.sh:/docker-entrypoint-initdb.d/management-db-initialize.sh
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=pg
      - TZ=Europe/Warsaw
    ports:
      - "5433:5432"

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  gateway:
    image: gateway
    build:
      context: .
      dockerfile: gateway-service/Dockerfile
    ports:
      - "8085:80"
    environment:
      - IdentityUrl=http://identity

  rabbit:
    image: rabbitmq:3-management
    restart: always
    volumes:
      - /var/lib/rabbitmq
    ports:
      - "15672:15672"
    expose:
      - "5672"
    env_file:
      - ./rabbitmq.env

  accessibility:
    image: accessibility
    build:
      context: .
      dockerfile: accessibility-service/Dockerfile
    ports:
      - "80:80"
    env_file:
      - ./accessibility.env

  management:
    image: mangement
    build:
      context: ./management-service
    volumes:
      - ./management-service:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 82:80
    env_file:
      - ./management.env
    depends_on:
      - db
      - rabbit

  identity:
    image: identity
    build:
      context: .
      dockerfile: identity-service/Dockerfile
    depends_on:
      - "db"
    ports:
      - "83:80"
    environment:
      - ConnectionStrings:Identity=Host=db;Database=identity;Username=postgres;Password=pg

  community:
    image: community
    build:
      context: .
      dockerfile: community-service/Dockerfile
    ports:
      - "84:80"
    env_file:
      - ./community.env

  employee-web-client:
    image: employee-web-client
    build:
      context: ./employee-web-client
      dockerfile: ./Dockerfile.prod
    ports:
      - 3001:80
    depends_on:
      - db
      - rabbit
      - adminer
      - accessibility
      - management

  customer-web-client:
    image: customer-web-client
    build:
      context: ./customer-web-client
      dockerfile: ./Dockerfile.prod
    ports:
      - 3002:80
    depends_on:
      - db
      - rabbit
      - adminer
      - accessibility
      - management

volumes:
  pgdata:
